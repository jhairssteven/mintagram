"""
Django settings for authProject project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
#libreria para hacer los tokens duren ciertotiempo timedelta
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(kmy2qe2ye(vdk8i6f*6d=@=4&=1sl+a+r85x%qcbu24_*(&g-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG                  = False
ALLOWED_HOSTS          = ['localhost']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'authApp',

]

#para configurar los tokens, diccionario para guardar la confi
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    #para que no vuelva a generar el mismo token
    # se cambia a false, proque como en microservicio mucho flujo de info
    # no sirve estar creando nuevos porque luego se van a acabar los tokens
    'BLACKLIST_AFTER_ROTATION': False, 
    #guardar info del ultimo login
    'UPDATE_LAST_LOGIN': False,
    #tipo de algoritmo a usar para hacer los tokens
    'ALGORITHM': 'HS256',
    #id de la tabla del usuario
    'USER_ID_FIELD': 'id',
    #nombre del campo sobre el que se tratara de tener verificacion
    'USER_ID_CLAIM': 'user_id',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# rest_framework sirve para poner los que se van a poner en el desa. de la aplicacion
REST_FRAMEWORK = {
    #quien puede acceder a las clases que estan en django
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    #Que autenticacion se necesita pa llegar a esas clases
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}

# para decirle quien va a ser la clase sobre la cual se van a hacer los servicios de autenticacion
#AUTH_USER_MODEL = 'authApp.User'

ROOT_URLCONF = 'authProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'authProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# coneccion BD ya sea local o nube, se cambian credenciales
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'dn25nq7111pu',
        'USER': 'ocbahoiegxxrqf',
        'PASSWORD': '62e951733ca87263b2482a0b40ec887a2fa397f654759bfd149e167f9e17eee3',
        'HOST': 'ec2-3-212-194-162.compute-1.amazonaws.com',
        'PORT': '5432',
        'TEST': {'MIRROR': 'default',},
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import django_heroku
django_heroku.settings(locals())